# Trick to set default-terminal based on the terminal emulator type (e.g. XTerm), add TERM to the update-environment list
set -g update-environment 'DISPLAY KRB5CCNAME SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY TERM TERM_PROGRAM TERM_VERSION TERM_ANSWERBACK TERM_RESPONSE'
# if "[[ ${TERM} =~ 256color || ${TERM} == fbterm ]]" 'set -g default-terminal screen-256color'

# This sets the inner TERM (inside tmux window)
# if not set, then tmux uses 'screen' or 'tmux-256color' (if available)
# but 'screen' does not have italics codes defined (intentionally)
# screen-256color would be reasonable TERM to use inside tmux windows, but tmux intentionally ignores sitm/ritm if TERM begins with screen*
# 'tmux-256color' taken from ncurses6 breaks lynx or fpp easily (can be fixed though)
# (pairs# cannot be 0x10000, because older tic from ncurses 5.7 will produce 0 out of it, user pairs#32767 instead)
# so the best option here it probably xterm-256color or something similar
# set -g default-terminal 'screen-256color'
# set -g default-terminal 'xterm-256color-italic'
# set -g default-terminal 'xterm-256color'
set -g default-terminal 'tmux-256color'

# Make tmux emit escape codes like XTerm for function keys and small keypad keys
set -g xterm-keys on

# Default tmux overrides (without any ~/.tmux.conf)
# terminal-overrides[0] "xterm*:XT:Ms=\\E]52;%p1%s;%p2%s\\007:Cs=\\E]12;%p1%s\\007:Cr=\\E]112\\007:Ss=\\E[%p1%d q:Se=\\E[2 q"
# terminal-overrides[1] screen*:XT
set -s terminal-overrides ''

# All the terminal-overrides should be part of the terminfo specification for the terminal that is launching tmux,
# but xterm terminfo is almost always broken, so these overrides should fix it
# https://invisible-island.net/xterm/terminfo.html
# https://invisible-island.net/xterm/ctlseqs/ctlseqs.html

# Overriding number of colors to 256 regardless of what the TERM terminfo says
# other option to set 256 colros is using a proper TERM=<term-with-256-colors> (e.g. TERM=xterm-256color tmux) or launching tmux with tmux -2
set -sa terminal-overrides ',*:colors=256'
# set -sa terminal-overrides ',*:pairs=32767'
set -sa terminal-overrides ',*:pairs=65536'
set -sa terminal-overrides ',*:setab=\E[%?%p1%{8}%<%t4%p1%d%e%p1%{16}%<%t10%p1%{8}%-%d%e48;5;%p1%d%;m'
set -sa terminal-overrides ',*:setaf=\E[%?%p1%{8}%<%t3%p1%d%e%p1%{16}%<%t9%p1%{8}%-%d%e38;5;%p1%d%;m'

# Allow setting XTerm application title (see tmux set-titles and set-titles-string options)
# Can be set like this: tput hs 2>/dev/null && tput tsl && echo <text> && tput fsl
# Do not confuse with setting screen/tmux window name (e.g. printf '\ekmy_window_name\e\\')
set -sa terminal-overrides ',*:XT'
# Set/reset the cursor color
# Can be set like this: printf '\033]12;red\033\\'
set -sa terminal-overrides ',*:Cs=\E]12;%p1%s\007:Cr=\E]112\007'
# Set/reset cursor style
# Can be set like this: printf '\e[4 q'
set -sa terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'
# Store the current buffer in the host terminal's selection (clipboard), see tmux set-clipboard option
set -sa terminal-overrides ',*:Ms=\E]52;%p1%s;%p2%s\007'
# without Ms capability there is a couple of options how to enable clipboard integration via xsel or xclip
# xsel variant:
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xsel -i -p && xsel -o -p | xsel -i -b"
# bind-key p run "xsel -o | tmux load-buffer - ; tmux paste-buffer"
# xclip variant:
# bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "xclip -i -sel clip > /dev/null"
# bind-key p run "xclip -o -sel clip | tmux load-buffer - ; tmux paste-buffer"

# Add terminal-override string (-a) for all TERMs (*) to add dim capability (even though it may be missing in the terminfo belonging to TERM)
set -sa terminal-overrides ',*:dim=\E[2m'
# Italicized, ECMA-48 2nd.
set -sa terminal-overrides ',*:sitm=\E[3m,*:ritm=\E[23m'
# Crossed-out characters, ECMA-48 3rd (ncurses extension ECMA-48 strikeout/crossed-out)
set -sa terminal-overrides ',*:smxx=\E[9m,*:rmxx=\E[29m'
# Doubly-underlined, ECMA-48 3rd. (not supported by tmux inside terminal)
set -sa terminal-overrides ',*:Smul=\E[21m'

# http://man7.org/linux/man-pages/man1/tmux.1.html#TERMINFO_EXTENSIONS
# Smulx is a tmux extension, allows setting underscore style
#this will cause it to be exported to the outside terminal as Smul (which XTerm supports)
# set -sa terminal-overrides ',*:Smulx=\E[21m'
set -sa terminal-overrides ',*:Smulx=\E[4::%p1%dm'

# Setulc is a tmux extension, allows setting of underscore color (RGB)
set -sa terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Enable overline capability
set -sa terminal-overrides ',*:Smol=\E[53m:Rmol=\E[55m'

# Enable true color (direct color) mode (RGB)
set -sa terminal-overrides ',*:Tc'

# To send escape sequence to the outer terminal it needs to be wrapped inside \ePtmux;<the sequence with \e doubled>\e\\
# it has a big drawback though, this will ignore tmux so the change will be global across all tmux windows (can be a problem for example with changing cursor shape in on window and it will be the same in others)
# echo -e '\ePtmux;\e\e[21mitalics\e\e[24m\e\\'
# another example of the passthrough escape sequence
# setting iTerm2 profile from within tmux window
# printf '\033Ptmux;\033\033]1337;SetProfile=NewProfileName\007\033\\'

# Start window/pane numbering from 1
# set -g base-index 1
# set -g pane-base-index 1

# Automatically set window title
# set-window-option -g automatic-rename on

# Set application title (e.g. XTerm application title)
# relies on 'XT' terminal capability
set-option -g set-titles on
set-option -g set-titles-string "#{session_alerts} #T [tmux #S:#I:#W]"

# Limit number of window history lines
set -g history-limit 50000

# Set ability to capture on start and restore on exit window data when running an application
set -g alternate-screen on

# Set handling of clipboard escape sequence (on/external/off)
# relies on 'Ms' terminal capability
# if on, then tmux will put the text in buffer and send to the external app (e.g. XTerm)
# if external, then tmux will only send the text to the external app
# if off, then tmux will ignore the clipboard escape sequence
set -g set-clipboard on

# Turn on mouse mode
set -g mouse on

# Allow renaming of windows via escape sequences
set -g allow-rename on

# No delay for escape key press (this is a bit dangerous, maybe something like 50m would be more safe)
set-option -s escape-time 0

# Set window notifications
set -g visual-activity both
set -g visual-silence both

# Status bar update interval in seconds
set -g status-interval 10     # redraw status line every 10 seconds
set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1000      # slightly longer status messages display time

set -g window-status-current-style "fg=white, bg=black, bold"
set -g status-left ''
set -g status-right-length 60
# status_right.sh is usually 25 (could be a bit more - reserve 30)
set -g status-right ' "#{=/26/>:pane_title}" #(~/.tmux/status_right.sh)'
# set -g status-right ‘#[fg=yellow,bg=black]#(uptime)’
# set -g status-right '#[fg=red,bg=default]#(uptime) #[fg=blue]%a%d-%m-%Y %H:%M:%S'

# Reload tmux config
bind-key R source-file ~/.tmux.conf \; display-message "Config reloaded."

# Simple splitting with | and -
bind-key | split-window -h
bind-key - split-window -v

# Better (pre tmux 3.0 list-keys display) instead of the default very simple form (list-keys -N)
bind-key -T prefix ? list-keys

# Visually differentiate copy mode
# set-hook -g pane-mode-changed { if -F "#{pane_in_mode}" "selectp -P bg=blue" "selectp -P default" }

# GNU Screen like bindings
# ------------------------
unbind-key C-b
set-option -g prefix C-a
# Switch to previously selected window
bind-key C-a last-window
# Space/Backspace window navigation
bind-key Space next-window
bind-key BSpace previous-window
bind-key C-Space next-window
bind-key C-h previous-window

bind-key C-c new-window

bind-key '"' choose-window

# Create window immediately to the right of current window on t
bind t new-window -a
# Rebind clock mode to T
bind T clock-mode
# bind -n C-t new-window -a -c "#{pane_current_path}" \; \

# Set copy mode to vi style and setup escape to quit out of it
set-option -g mode-keys vi
bind-key C-[ copy-mode
bind-key -T copy-mode C-[ send-keys -X cancel
bind-key -T copy-mode-vi C-[ send-keys -X cancel

# Ctrl-a a will send Ctrl-a to the terminal
bind-key a send-prefix
# Rename window
bind-key A command-prompt -I "#W" "rename-window -- '%%'"

# Monitor activity and silence
# bind-key S set-window-option synchronize-panes\; display-message "synchronize-panes is now #{?pane_synchronized,on,off}"
# bind-key M run-shell "if [[ `tmux show-options -w | grep 'monitor-activity.*on'` ]]; then toggle=off; else toggle=on; fi; tmux display-message \"monitor-activity is now \$toggle\"" \; set-option -w monitor-activity
# bind-key _ run-shell "if [[ `tmux show-options -w | grep 'monitor-silence.*[1-9][0-9]*'` ]]; then toggle=0; else toggle=5; fi; tmux display-message \"monitor-silence is now \$toggle\"; tmux set-option -w monitor-silence \$toggle &> /dev/null"
bind-key M run-shell "~/.tmux/tmux_toggle_option.sh -w monitor-activity on off"
bind-key _ run-shell "~/.tmux/tmux_toggle_option.sh -w monitor-silence 5 0"

# Extras
bind-key F run-shell "cat ~/.tmux/functions.sh | sh -s _fpp #{pane_id}"
bind-key U run-shell "cat ~/.tmux/functions.sh | sh -s _urlview #{pane_id}"

# Nested tmux support
set -g status-bg colour40
#  setw -g window-status-current-bg colour40

bind -n S-left  prev
bind -n S-right next
bind -n S-C-left  swap-window -t -1\; select-window -t -1
bind -n S-C-right swap-window -t +1\; select-window -t +1

bind -n M-F11 set -qg status-bg colour25
bind -n M-F12 set -qg status-bg colour40
bind -n S-up \
        send-keys M-F12 \; \
        set -qg status-bg colour25 \; \
        unbind -n S-left \; \
        unbind -n S-right \; \
        unbind -n S-C-left \; \
        unbind -n S-C-right \; \
        set -qg prefix C-s
bind -n S-down \
        send-keys M-F11 \; \
        set -qg status-bg colour40 \; \
        bind -n S-left  prev \; \
        bind -n S-right next \; \
        bind -n S-C-left  swap-window -t -1\; select-window -t -1 \; \
        bind -n S-C-right swap-window -t +1\; select-window -t +1 \; \
        set -qg prefix C-a

# Tmux plugins (both directly modified with custom bindings)
run-shell "~/.tmux/plugins/tmux-picker/tmux-picker.tmux"
run-shell "~/.tmux/plugins/extrakto/extrakto.tmux"
