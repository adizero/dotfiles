#Screen          "old versions???"                   (nothing)
#Xterm           Xterm(278)                          ^[[>0;278;0c
#Xterm           Xterm(317)                          ^[[>41;317;0c
#Lxterminal      lxterminal (0.1.11-4ubuntu3)        ^[[>1;2802;0c
#Cygwin                                              ^[[>77;10103;0c
#PuTTY           0.62                                ^[[>0;136;0c
#Screen          4.00.03 (FAU)                       ^[[>83;40003;0c
#Screen          4.01.00devel (GNU) 2-May-06         ^[[>83;40100;0c
#Gnome-terminal  GNOME Terminal 3.6.2                ^[[>1;3409;0c
#Konsole         2.13.2                              ^[[>0;115;0c

esc_seq=

wrap_escape_sequence()
{
	#echo "preparing escape sequence before calling back..."
	if [ ! -z "$STY" ]; then
		esc_seq="\033P$1\033\\"
	elif [ ! -z "$TMUX" ]; then
        #duplicate escapes
        esc_seq=`echo $1 | sed 's/\\\\033/\\\\033\\\\033/g'`
        #add wrapping
		esc_seq="\033Ptmux;$esc_seq\033\\"
	else
		esc_seq="$1"
	fi
}

termInitialDetection()
{
    #echo "Gathering terminal specs..."

	stty -echo

	if [ -n "$VTE_VERSION" -a -z "$COLORFGBG" ]; then
		wrap_escape_sequence '\033]10;?\a\033]11;?\a'
		echo -ne $esc_seq
		IFS=: read -t 0.5 -d $'\a' x fg
		IFS=: read -t 0.5 -d $'\a' x bg
		if [[ ${fg:0:1} =~ [01234567] ]]; then
			export COLORFGBG='0;15'
		else
			export COLORFGBG='15;0'
		fi
		unset x fg bg
	fi

    TERM_PROGRAM=
    TERM_VERSION=

    #screen is tmux's default, we expect xterm-like terminal underneath (can be wrong assumption),
    # when using rxvt-like, then change default TERM variable in tmux for new terminals to screen.rxvt for example
    if [[ "$TERM" =~ "xterm" || "$TERM" =~ "screen-bce" || "$TERM" =~ "screen" ]]; then
        if [ -z "$TERM_RESPONSE" ]; then
            wrap_escape_sequence '\033[>c'
            echo -ne $esc_seq
            read -r -t 0.5 -d $'c' termresponse 
            #we need to strip the first escape character from response
            # and replace is by something harmless (its text representation)
            export TERM_RESPONSE="^[${termresponse:1}c"
            unset termresponse
        fi

        if [ -z "$TERM_ANSWERBACK" ]; then
            wrap_escape_sequence '\005\033[>c' 
            echo -ne $esc_seq
            read -r -t 0.5 -d $'\033' answerback
            read -r -t 0.1 -d $'c' termresponse 
            #we need to strip the first escape character from response
            # and replace is by something harmless (its text representation)
            export TERM_ANSWERBACK="${answerback:0}$"
            unset answerback
            unset termresponse
        fi

        if [ "$TERM_ANSWERBACK" == "PuTTY" ]; then
            TERM_PROGRAM="PuTTY"
        else
            response="${TERM_RESPONSE:4}"
            response="${response%;*}"
            term_type="${response%;*}"
            term_version="${response#*;}"

            if [ "$term_type" == "0" -a "$term_version" == "115" ]; then
                TERM_PROGRAM="Konsole"
            elif [ "$term_type" == "0" -a "$term_version" == "136" ]; then
                TERM_PROGRAM="PuTTY"
            elif [ "$term_type" == "0" -o "$term_type" == "41" ]; then
                TERM_PROGRAM="xterm"
                TERM_VERSION="$term_version"
            elif [ "$term_type" == "1" ]; then
                if [ "$term_version" == "2802" ]; then
                    TERM_PROGRAM="lxterminal"  #exception
                else
                    TERM_PROGRAM="gnome-terminal"
                fi
            elif [ "$term_type" == "77" ]; then
                TERM_PROGRAM="Cygwin"
            fi
        fi
    elif [[ "$TERM" =~ "rxvt" || "$TERM" =~ "screen.rxvt" ]]; then
        TERM_PROGRAM="rxvt"
    fi

	if [ ! -z "$TERM_PROGRAM" ]; then
		export TERM_PROGRAM
	fi

	if [ ! -z "$TERM_VERSION" ]; then
		export TERM_VERSION
		XTERM_VERSION="XTerm($TERM_VERSION)"
		export XTERM_VERSION
	fi

	stty echo

    #echo "Terminal specs: $TERM_RESPONSE ($TERM_ANSWERBACK) [$COLORFGBG]"
    #echo "Terminal program: $TERM_PROGRAM - $TERM_VERSION"
}

termDetect()
{
	#reset all terminal callback variables to force initial slow detection
	if [ -n "$VTE_VERSION" ]; then
		COLORFGBG=
	fi
	TERM_RESPONSE=
	TERM_ANSWERBACK=

	termInitialDetection
}
