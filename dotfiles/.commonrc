if [ -z "${USER}" ]; then
    if [ -n "${HOME}" ]; then
        # sometimes in docker container the USER is not set, but HOME is (deduce user from the HOME directory)
        USER="${HOME##*/}"
    fi
fi

# Turn off flow control <C-S> and <C-Q> key only for interactive session to not collide with scp/ssh
[[ $- == *i* ]] && stty -ixon

#Xterm does not support setting of --bfreq and --blength (hence the 2>/dev/null)
setterm --bfreq 7000 --blength 50 2>/dev/null

# Locale (should be set already via /etc/profile.d/locale.sh -> /etc/locale.conf)
export LANG=en_US.UTF-8

# Setup terminal apps
export PAGER=less
export EDITOR=vim
export VISUAL=vim

# FZF
[ -x "$(command -v fd)" ] && export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow'

# Nokia intranet ip ranges
intranet_ip_ranges() { if [ -x $HOME/get_intranet_ranges.sh ]; then $HOME/get_intranet_ranges.sh; else $HOME/Dropbox/Homework/get_intranet_ranges.sh; fi; }

pathadd() {
    dir="${1%/}"
    if [ -d "${dir}" ] && ! echo "$PATH" | grep -E -q "(^|:)${dir}($|:)"; then
        if [ "$2" = "after" ] ; then
            PATH="$PATH:${dir}"
        else
            PATH="${dir}:$PATH"
        fi
    fi
}

pathrm() {
    PATH="$(echo "$PATH" | sed -e "s;\(^\|:\)${1%/}\(:\|\$\);\1\2;g" -e 's;^:\|:$;;g' -e 's;::;:;g')"
}

python_pathadd() {
    dir="${1%/}"
    if [ -d "${dir}" ] && ! echo "$PYTHONPATH" | grep -E -q "(^|:)${dir}($|:)" ; then
        if [ "$2" = "after" ] ; then
            PYTHONPATH="$PYTHONPATH:${dir}"
        else
            PYTHONPATH="${dir}:$PYTHONPATH"
        fi
    fi
}

python_pathrm() {
    PYTHONPATH="$(echo "$PYTHONPATH" | sed -e "s;\(^\|:\)${1%/}\(:\|\$\);\1\2;g" -e 's;^:\|:$;;g' -e 's;::;:;g')"
}

xdg_data_dirs_add() {
    dir="${1%/}"
    if [ -d "${dir}" ] && ! echo "$XDG_DATA_DIRS" | grep -E -q "(^|:)${dir}($|:)"; then
        if [ "$2" = "after" ] ; then
            XDG_DATA_DIRS="$XDG_DATA_DIRS:${dir}"
        else
            XDG_DATA_DIRS="${dir}:$XDG_DATA_DIRS"
        fi
    fi
}

pathadd $HOME/bin

# Created by `pipx` on 2024-06-02 00:08:49
pathadd $HOME/.local/bin after

# Environment variables
# PATH="/home/akocis/perl5/bin${PATH:+:${PATH}}"; export PATH;
pathadd $HOME/perl5/bin
PERL5LIB="/home/akocis/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/akocis/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/akocis/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/akocis/perl5"; export PERL_MM_OPT;

export PATH

# Basic prompt
# PS1='[\u@\h \W]\$ '
_ns_name=$(ip netns identify 2>/dev/null)
PS1=${_ns_name:+(${_ns_name})}${PS1}
unset _ns_name

# fix mc handling of .rar archives
export MC_TEST_EXTFS_UNRAR_VERSION=5

# Aliases
[ -r ~/.commonrc.alias ] && source ~/.commonrc.alias

# although fzf supports 256 or true color schemes, the default 16 color one has much better contrast
# export FZF_DEFAULT_OPTS='--color=16'

generate_vim_help_tags()
{
    # just running :helptags ALL does not work because it will not go to all subfolders and has tendency to abort on failures
    # this is not necessary to run after copying the environment, because the tag files are synced as well
    # still useful to run after adding new plugins
    echo "... (re)generating Vim help tags"
    ${1:-vim} -eX -u NONE -c 'for dir in split(globpath(&rtp, "**/doc"), "\n") | try | execute "helptags " . dir | catch | echomsg v:exception | endtry | endfor' -c quit
}

generate_nvim_help_tags()
{
    generate_vim_help_tags nvim
}
