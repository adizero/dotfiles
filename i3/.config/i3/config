# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# Debugging i3
# start logging
# i3-msg 'debuglog on; shmlog on; reload'
# ... do actions ...
# dump the log to the screen (use redirects to save it to a file or pipe to editor like nv)
# i3-dump-log
# stop logging
# i3-msg 'debuglog off; shmlog off; reload'

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
# font pango:monospace 8

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

hide_edge_borders smart

# start a terminal
bindsym $mod+Return exec i3-sensible-terminal
# bindsym $mod+Return exec termite
# bindsym $mod+Return exec gnome-terminal
# bindsym $mod+Return exec alacritty

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
#bindsym $mod+d exec dmenu_run
#rofi can be drop-in replacement for -dmenu
bindsym $mod+d exec dmenu_path | rofi -dmenu -matching fuzzy -levenshtein-sort

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

#rofi -modi "window,run,ssh,Workspaces:~/.config/i3/scripts/i3_switch_workspaces.sh" -show Workspaces

bindsym $mod+F9  exec rofi -dpi 1 -show run    -fg '#f1f1f1' -bg '#333333' -hlfg '#ffffff' -hlbg '#336699' -o 85 -matching fuzzy -levenshtein-sort
bindsym $mod+F10 exec rofi -dpi 1 -show drun   -fg '#f1f1f1' -bg '#333333' -hlfg '#ffffff' -hlbg '#336699' -o 85 -matching fuzzy -levenshtein-sort -drun-display-format '{name}: {exec}'
bindsym $mod+F11 exec rofi -dpi 1 -show window -fg '#f1f1f1' -bg '#333333' -hlfg '#ffffff' -hlbg '#336699' -o 85 -matching fuzzy -levenshtein-sort
bindsym $mod+F12 exec "rofi -dpi 1 -combi-modi window,drun -show combi -fg '#f1f1f1' -bg '#333333' -hlfg '#ffffff' -hlbg '#336699' -o 85 -matching fuzzy -levenshtein-sort"

# change focus
#bindsym $mod+j focus left
#bindsym $mod+k focus down
#bindsym $mod+l focus up
#bindsym $mod+semicolon focus right
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
# bindsym $mod+Left focus left
bindsym $mod+Left exec "~/.config/i3/scripts/i3_switch_to_neighboring_workspace.sh left"
bindsym $mod+Down focus down
bindsym $mod+Up focus up
# bindsym $mod+Right focus right
bindsym $mod+Right exec "~/.config/i3/scripts/i3_switch_to_neighboring_workspace.sh right"
bindsym $mod+Tab exec "~/.config/i3/scripts/i3_switch_to_previously_focused_container.sh"

# move focused window
#bindsym $mod+Shift+j move left
#bindsym $mod+Shift+k move down
#bindsym $mod+Shift+l move up
#bindsym $mod+Shift+semicolon move right
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+o split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split
bindsym $mod+c layout toggle all

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace 2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace 8
bindsym $mod+9 workspace 9
bindsym $mod+0 workspace 10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace 2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace 8
bindsym $mod+Shift+9 move container to workspace 9
bindsym $mod+Shift+0 move container to workspace 10

# Scratchpad
# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# reload Dunst (Dunst notification system does not have any signal handling or command line api for this)
bindsym $mod+Shift+d --release exec --no-startup-id "killall dunst; notify-send 'dunst was restarted'"

# non-interactive screenshot by pressing printscreen (screenshot is saved in home directory as ~/<date-time>_scrot.png)
bindsym Print exec ~/.config/i3/scripts/i3-scrot

# interactive crop-area screenshot by pressing Mod + printscreen
bindsym --release Shift+Print exec ~/.config/i3/scripts/i3-scrot -s

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    # bindsym j resize shrink width 10 px or 10 ppt
    # bindsym k resize grow height 10 px or 10 ppt
    # bindsym l resize shrink height 10 px or 10 ppt
    # bindsym semicolon resize grow width 10 px or 10 ppt
    bindsym h resize shrink width 10 px or 10 ppt
    bindsym j resize grow height 10 px or 10 ppt
    bindsym k resize shrink height 10 px or 10 ppt
    bindsym l resize grow width 10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left resize shrink width 10 px or 10 ppt
    bindsym Down resize grow height 10 px or 10 ppt
    bindsym Up resize shrink height 10 px or 10 ppt
    bindsym Right resize grow width 10 px or 10 ppt

    bindsym Shift+Left resize shrink width 100 px or 100 ppt
    bindsym Shift+Down resize grow height 100 px or 100 ppt
    bindsym Shift+Up resize shrink height 100 px or 100 ppt
    bindsym Shift+Right resize grow width 100 px or 100 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+r mode "default"
}

bindsym $mod+r mode "resize"

mode "move" {
    bindsym h move left 20px
    bindsym j move down 20px
    bindsym k move up 20px
    bindsym l move right 20px

    bindsym Up move up 20px
    bindsym Left move left 20px
    bindsym Down move down 20px
    bindsym Right move right 20px

    # back to normal: Enter or Escape or $mod+m
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+m mode "default"
}
bindsym $mod+m focus floating; mode "move"

set $mode_ws workspaces
mode "$mode_ws" {
    bindsym 1 workspace 1; mode "default"
    bindsym Shift+1 move container to workspace 1; mode "default"
    bindsym 2 workspace 2; mode "default"
    bindsym Shift+2 move container to workspace 2; mode "default"
    bindsym 3 workspace 3; mode "default"
    bindsym Shift+3 move container to workspace 3; mode "default"
    bindsym 4 workspace 4; mode "default"
    bindsym Shift+4 move container to workspace 4; mode "default"
    bindsym 5 workspace 5; mode "default"
    bindsym Shift+5 move container to workspace 5; mode "default"
    bindsym 6 workspace 6; mode "default"
    bindsym Shift+6 move container to workspace 6; mode "default"
    bindsym 7 workspace 7; mode "default"
    bindsym Shift+7 move container to workspace 7; mode "default"
    bindsym 8 workspace 8; mode "default"
    bindsym Shift+8 move container to workspace 8; mode "default"
    bindsym 9 workspace 9; mode "default"
    bindsym Shift+9 move container to workspace 9; mode "default"
    bindsym 0 workspace 10; mode "default"
    bindsym Shift+0 move container to workspace 10; mode "default"

    bindsym a workspace a; mode "default"
    bindsym Shift+a move container to workspace a; mode "default"
    bindsym b workspace b; mode "default"
    bindsym Shift+b move container to workspace b; mode "default"
    bindsym c workspace c; mode "default"
    bindsym Shift+c move container to workspace c; mode "default"
    bindsym d workspace d; mode "default"
    bindsym Shift+d move container to workspace d; mode "default"
    bindsym e workspace e; mode "default"
    bindsym Shift+e move container to workspace e; mode "default"
    bindsym f workspace f; mode "default"
    bindsym Shift+f move container to workspace f; mode "default"

    # back to normal: Enter or Escape or $mod+apostrophe
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+apostrophe mode "default"
}
bindsym $mod+apostrophe mode "$mode_ws"

# system power commands
set $mode_system System (l) lock, (e) logout, (s) suspend, (h) hibernate, (r) reboot, (Shift+s) shutdown
mode "$mode_system" {
    bindsym l exec --no-startup-id i3_exit.sh lock, mode "default"
    bindsym e exec --no-startup-id i3_exit.sh logout, mode "default"
    bindsym s exec --no-startup-id i3_exit.sh suspend, mode "default"
    bindsym h exec --no-startup-id i3_exit.sh hibernate, mode "default"
    bindsym r exec --no-startup-id i3_exit.sh reboot, mode "default"
    bindsym Shift+s exec --no-startup-id i3_exit.sh shutdown, mode "default"

    # back to normal: Enter or Escape or $mod+End
    bindsym Return mode "default"
    bindsym Escape mode "default"
    bindsym $mod+End mode "default"
}

bindsym $mod+End mode "$mode_system"

workspace_auto_back_and_forth yes

# Dunst notifications shortcuts
bindsym ctrl+shift+space exec dunstctl close
# bindsym ctrl+shift+space exec dunstctl close-all
bindsym ctrl+grave exec dunstctl history-pop
bindsym ctrl+shift+period exec dunstctl context

# Polybar toggle with Caps Lock (first Caps Lock must be bound to Hyper_L in ~/.Xmodmap)
# bindsym Hyper_L exec polybar-msg cmd show
# bindsym --release Hyper_L exec polybar-msg cmd hide
bindsym Hyper_L exec polybar-msg cmd toggle

# show polybar only when $mod key is pressed
# the mapping will not work with bindsym $mod ..., bindcode has to be used for this (133 is the keycode of Super_L on hp6550b)
# has a glitch where every combined Super_L+<key> will not trigger the release part so polybar will stay shown
# bindcode 133 exec polybar-msg cmd show
# bindcode --release 133 exec polybar-msg cmd hide

#BEWARE: takes num-lock state into account - must duplicate bindings to work in both cases
#BEWARE: keycodes are different in X vs terminal (get key codes via xev in X or showkey in terminal)
#numlock off
#bindcode 121 exec --no-startup-id /usr/bin/amixer set Master toggle
#bindcode 122 exec --no-startup-id /usr/bin/amixer set Master 5%-
#bindcode 123 exec --no-startup-id /usr/bin/amixer set Master 5%+
#bindcode 232 exec xbacklight -dec 20 # decrease screen brightness
#bindcode 233 exec xbacklight -inc 20 # increase screen brightness
##numlock on
#bindcode Mod2+121 exec --no-startup-id /usr/bin/amixer set Master toggle
#bindcode Mod2+122 exec --no-startup-id /usr/bin/amixer set Master 5%-
#bindcode Mod2+123 exec --no-startup-id /usr/bin/amixer set Master 5%+
#bindcode Mod2+232 exec xbacklight -dec 20 # decrease screen brightness
#bindcode Mod2+233 exec xbacklight -inc 20 # increase screen brightness

# Fn+PgUp (Pause)
bindsym Pause exec --no-startup-id "~/.config/i3/scripts/fuzzy_screen_lock.sh"

# Fn+PgDn (Break)
bindsym Control+Break exec --no-startup-id "~/.config/i3/scripts/fuzzy_screen_lock.sh"

#the numlock is not issue with bindsym definitions
#Fn+F3 (sleep) this puts the computer to sleep before calling this handler (so no need to call suspend here)
bindsym XF86Sleep exec --no-startup-id "~/.config/i3/scripts/fuzzy_screen_lock.sh"
#Fn+F4 (display)
#bindsym XF86Display exec --no-startup-id "~/.config/i3/scripts/fuzzy_screen_lock.sh; systemctl suspend"
bindsym XF86Display exec --no-startup-id "~/.config/i3/scripts/display_setup.sh"
#Fn+F6 (screensaver)
bindsym XF86ScreenSaver exec --no-startup-id "~/.config/i3/scripts/fuzzy_screen_lock.sh"
#Fn+F8 (battery)
bindsym XF86Battery exec --no-startup-id xset dpms force standby
#Fn+F9 (brightness down)
bindsym XF86MonBrightnessDown exec xbacklight -dec 20 # decrease screen brightness
#Fn+F10 (brightness up)
bindsym XF86MonBrightnessUp exec xbacklight -inc 20 # increase screen brightness

#mail key
bindsym XF86Mail exec --no-startup-id playerctl play-pause
#browser key
bindsym XF86HomePage exec --no-startup-id "~/.config/i3/scripts/fuzzy_screen_lock.sh"
#calculator key
bindsym XF86Calculator exec --no-startup-id "~/.config/i3/scripts/fuzzy_screen_lock.sh"
#mute key
bindsym XF86AudioMute exec --no-startup-id "~/.config/i3/scripts/i3_volume.sh mute"
#volume down key
bindsym XF86AudioLowerVolume exec --no-startup-id "~/.config/i3/scripts/i3_volume.sh down 5"
#volume up key
bindsym XF86AudioRaiseVolume exec --no-startup-id "~/.config/i3/scripts/i3_volume.sh up 5"

# Aeropex headset multifunction button (or keyboard multimedia keys), requires playerctl application
bindsym XF86AudioPlay exec --no-startup-id playerctl play-pause
bindsym XF86AudioPause exec --no-startup-id playerctl play-pause
bindsym XF86AudioNext exec --no-startup-id playerctl next
bindsym XF86AudioPrev exec --no-startup-id playerctl previous

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)

### ### bar {
### ###   status_command i3blocks
### ###   mode dock
### ###   position top
### ###   workspace_buttons yes
### ###   font pango:PragmataPro 12
### ###   height 25
### ###   colors {
### ###     background #343d46
### ###     statusline #eff1f5
### ###     separator #323232
### ###     focused_workspace #a3be8c #65737e #eff1f5
### ###     active_workspace #4f5b66 #5f676a #eff1f5
### ###     inactive_workspace #4f5b66 #4f5b66 #a7adba
### ###     urgent_workspace #bf616a #65737e #eff1f5
### ###   }
### ### }

### bar {
###     #font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
###     #font pango:Terminus 11px
###     font pango:Dejavu Sans Mono, Symbola 11px
###         #status_command i3status
###         status_command i3blocks
### }
exec --no-startup-id sudo nbfc start
exec_always --no-startup-id ~/.config/polybar/launch.sh

exec --no-startup-id dropbox start
exec_always --no-startup-id ~/.config/i3/scripts/autolock.sh
exec_always --no-startup-id ~/.config/i3/scripts/i3_monitor_previously_focused_containers.sh

# redshift
# requires ahahi-daemon service to be running (otherwise geoclue service will not start)
# enable avahi: systemctl enable --now avahi-daemon
exec --no-startup-id /usr/lib/geoclue-2.0/demos/agent
# or simply configure redshift with static location (Sunnyvale CA, USA):
# edit ~/.config/redshift/redshift.conf:
# [redshift]
# location-provider=manual
#
# [manual]
# lat=37.39
# lon=-122.05
#
# redshift service needs to be enabled: systemctl --user enable --now redshift
# it is possible to toggle redshift on/off: pkill -USR1 redshift

# check information about X windows with xprop
# default_border pixel 0
# for_window [class=".*"] border pixel 0
for_window [class="Gnome-terminal"] border pixel 0
for_window [class="Chromium"] border pixel 0

# for some reason Google-chrome window does not match its class
# for_window [class="google-chrome"] border pixel 0
# for_window [class="Google-chrome"] border pixel 0
for_window [window_role="browser"] border pixel 0

# check information about X windows with xprop
for_window [class="gnuplot_qt"] floating enable
for_window [class="(?i)pavucontrol"] floating enable

for_window [title="Hangouts"] move --no-auto-back-and-forth container to workspace number 2
for_window [window_role="pop-up"] floating enable, border normal
for_window [class="(?i)nxclient.bin" title="NoMachine Software Update"] floating enable, move --no-auto-back-and-forth container to workspace number 2

for_window [class="qutebrowser"] border pixel 0

# ===============================================================
# Dynamically create and access workspaces with external programs
# ===============================================================
# You can do not have to define a shortcut for every single workspace, you can just create them on the fly by sending a workspace NEW_WS to i3, for example with the i3-msg program:
# 
# i3-msg workspace NEW_WS
# i3-msg move container to workspace NEW_WS
# i3 also comes with the i3-input command, which opens a small input field then runs a command with the given input as parameter
# 
# i3-input -F 'workspace %s' -P 'go to workspace: '
# i3-input -F 'move container to workspace %s' -P 'move to workspace: '
# Bind these these two commands to shortcuts and you can access an arbitrary number of workspaces by just pressing the shortcut and then entering the name (or number) of the workspace you want. (If you only work with numbered workspaces, you might want to use workspace number %s instead of just workspace %s)
# bar {
#     tray_output left
#     workspace_buttons no
#     height 0
# }
